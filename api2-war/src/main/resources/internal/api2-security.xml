<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2" 
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/security/oauth2 
		http://www.springframework.org/schema/security/spring-security-oauth2.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<security:http pattern="/image*" security="none" />
	<security:http pattern="/suggestions.json" security="none" />
	<security:http pattern="/opensearch.rss" security="none" />
	
 	<security:http auto-config="true" pattern="/*.(json|kml)" request-matcher="regex" authentication-manager-ref="api2_clientAuthenticationManager" realm="Euroepana API2">
		<security:intercept-url pattern="/*.json" access="ROLE_CLIENT" />
		<security:intercept-url pattern="/*.kml" access="ROLE_CLIENT" />
	</security:http>

	<security:http pattern="/oauth/token" create-session="stateless" authentication-manager-ref="api2_oauth2_clientAuthenticationManager"
		entry-point-ref="api2_oauth2_authenticationEntryPoint" realm="Euroepana API2 OAuth">
		<security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<security:anonymous enabled="false" />
		<security:http-basic entry-point-ref="api2_oauth2_authenticationEntryPoint" />
		<security:access-denied-handler ref="api2_oauth2_accessDeniedHandler" />
	</security:http>

	<!--  entry-point-ref="api2_oauth2_authenticationEntryPoint" access-decision-manager-ref="api2_oauth2_accessDecisionManager"  authentication-manager-ref="api2_oauth2_userAuthenticationManager" -->
	<security:http auto-config="true" disable-url-rewriting="true" realm="Euroepana API2 Users">
		<security:intercept-url pattern="/oauth/**" access="ROLE_USER" />
		<security:intercept-url pattern="/user/**" access="ROLE_USER"/>
		<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<security:custom-filter ref="api2_oauth2_resourceServerFilter" before="PRE_AUTH_FILTER"/><!--  EXCEPTION_TRANSLATION_FILTER" /> -->
		<!-- <security:access-denied-handler ref="api2_oauth2_accessDeniedHandler" /> -->
		<!-- <security:form-login authentication-failure-url="/user/login" default-target-url="/index.html" login-page="/user/login.jsp"
			login-processing-url="/user/login" />
		<security:logout logout-success-url="/index.jsp" logout-url="/user/logoff" /> -->
	</security:http>
	
	<bean id="api2_oauth2_clientCredentialsTokenEndpointFilter" class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="api2_oauth2_clientAuthenticationManager"/>
	</bean>	

	<bean id="api2_oauth2_authenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="Europeana API2" />
	</bean>

	<bean id="api2_oauth2_accessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<bean id="api2_oauth2_accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased" xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<!-- AUTHENTICATION MANAGER -->

	<security:authentication-manager id="api2_oauth2_clientAuthenticationManager" xmlns="http://www.springframework.org/schema/security">
		<authentication-provider user-service-ref="api2_oauth2_clientDetailsUserService" />
	</security:authentication-manager>
	<bean id="api2_oauth2_clientDetailsService" class="eu.europeana.api2.web.security.oauth2.OAuth2ClientDetailsService"/>
	
	<!-- id="api2_oauth2_userAuthenticationManager" -->
	<security:authentication-manager  alias="authenticationManager">
		<security:authentication-provider user-service-ref="api2_userDetailsService">
			<security:password-encoder hash="sha"/>
		</security:authentication-provider>
	</security:authentication-manager>
	<bean id="api2_userDetailsService" class="eu.europeana.api2.web.security.UserDetailsServiceImpl"/>
	
	<security:authentication-manager id="api2_clientAuthenticationManager">
		<security:authentication-provider user-service-ref="api2_clientDetailsService"/>
	</security:authentication-manager>
	<bean id="api2_clientDetailsService" class="eu.europeana.api2.web.security.ClientDetailsServiceImpl"/>

	<!-- TOKEN STORE -->

	<bean id="api2_oauth2_tokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<bean id="api2_oauth2_tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="api2_oauth2_tokenStore" />
		<property name="supportRefreshToken" value="true" />
	</bean>
		
	<bean id="api2_oauth2_clientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="api2_oauth2_clientDetailsService" />
	</bean>

	<bean id="api2_oauth2_userApprovalHandler" class="eu.europeana.api2.web.security.oauth2.ApiUserApprovalHandler">
		<property name="autoApproveClients">
			<set>
				<value>my-less-trusted-autoapprove-client</value>
			</set>
		</property>
		<property name="tokenServices" ref="api2_oauth2_tokenServices" />
	</bean>
	
	<oauth2:authorization-server client-details-service-ref="api2_oauth2_clientDetailsService" token-services-ref="api2_oauth2_tokenServices"
		user-approval-handler-ref="api2_oauth2_userApprovalHandler" >
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>
		
	<oauth2:resource-server id="api2_oauth2_resourceServerFilter" resource-id="Europeana API2" token-services-ref="api2_oauth2_tokenServices"  />

</beans>