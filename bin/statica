#!/bin/bash
# Script inspired by and derived from Proximo (https://github.com/pirateradio/proximo-stacklet)
# Usage ./statica rails s

if [ "${STATICA_URL}" == "" ]; then
  echo "No STATICA_URL env variable found. Have you installed QuotaGuard Static?"
  echo "If using as an add-on please sign-up via your cloud platform first."
  echo "If using another platform sign-up at quotaguard.com and follow documentation to manually set variable"
  exit 2
fi

SOCKS_DIR="$(dirname $(dirname $(readlink -f ${BASH_SOURCE[0]})))/vendor/dante"

STATICA_HOST=$(awk -F'[/@:]' '{print $6}' <<< ${STATICA_URL})
STATICA_USERNAME=$(awk -F'[/@:]' '{print $4}' <<< ${STATICA_URL})
STATICA_PASSWORD=$(awk -F'[/@:]' '{print $5}' <<< ${STATICA_URL})
STATICA_MASK=${STATICA_MASK:-0.0.0.0/0}
STATICA_XMASK=${STATICA_XMASK}

export SOCKS_CONF="${SOCKS_DIR}/eu.europeana.corelib.web.socks.conf"
export SOCKS_LIBDIR="${SOCKS_DIR}/lib"
export SOCKS_USERNAME="${STATICA_USERNAME}"
export SOCKS_PASSWORD="${STATICA_PASSWORD}"
export SOCKS_LIBRARY="${SOCKS_DIR}/lib/libdsocks.so"
export SOCKS_USEFULLPATH="true"

rm -f $SOCKS_CONF
IFS=","

for STATICA_MASK_PART in $STATICA_MASK; do
  STATICA_MASK_ESCAPED=${STATICA_MASK_PART/\//\\/}
  cat "${SOCKS_CONF}.template" | \
    sed -e "s/%STATICA_HOST%/${STATICA_HOST}/g" \
        -e "s/%STATICA_MASK%/${STATICA_MASK_ESCAPED}/g" \
        >> $SOCKS_CONF
done

chmod +x ${SOCKS_DIR}/bin/socksify
echo "Statica enabled. Routing traffic to ${STATICA_MASK} via your Static IPs."

exec ${SOCKS_DIR}/bin/socksify $*
